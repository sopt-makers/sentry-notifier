plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'org.sopt.makers'
version = '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // AWS Lambda Core
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.3'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.4'

    // Jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.11'
    implementation 'org.slf4j:slf4j-simple:2.0.11'

    // Test
    testImplementation platform('org.junit:junit-bom:5.10.2')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'

    // Env
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
}

tasks.named('compileJava') {
    options.compilerArgs += '--enable-preview'
}

tasks.named('test') {
    useJUnitPlatform()
    jvmArgs(['--enable-preview'])
}

shadowJar {
    archiveBaseName.set("sentry-webhook")
    archiveClassifier.set("shadow")
    archiveVersion.set("")

    manifest {
        attributes(
                'Main-Class': 'org.sopt.makers.handler.SentryWebhookHandler',
                'Implementation-Title': 'Sentry Webhook Handler',
                'Implementation-Version': project.version
        )
    }

    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA'
}

build {
    dependsOn shadowJar
}
